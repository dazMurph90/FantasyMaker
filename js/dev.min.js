var initCanvas={};console.log("Enter initCanvas.js");
var cy=cytoscape({container:document.getElementById("cy"),layout:{name:"grid",rows:1},style:[{selector:"node",style:{content:"data(id)","text-opacity":1,"text-valign":"center","text-halign":"center","border-width":1,"border-opacity":1,"border-color":"black","transition-property":"border-width, border-opacity, border-color","transition-duration":"0.5s"}},{selector:"edge",style:{width:4,"target-arrow-shape":"triangle","line-color":"#9dbaea","target-arrow-color":"#9dbaea","curve-style":"bezier"}},{selector:":selected",
style:{"border-width":5,"line-color":"black","target-arrow-color":"black"}},{selector:".page",style:{shape:"roundrectangle","background-color":"light-gray"}},{selector:".control",style:{shape:"ellipse","background-color":"#72dadb"}},{selector:".source_node",style:{"border-width":7,"border-color":"#9dbaea"}},{selector:".disconnected",style:{"border-width":7,"border-opacity":1,"border-color":"red"}}],elements:{nodes:[],edges:[]},selectionType:"single",minZoom:.2,maxZoom:5});cy.panzoom();console.log("Canvas done");var states={DEFAULT:0,CONNECTING:1,NEWPAGE:2,NEWCONTROL:3};current_state=states.DEFAULT;function exitStates(){current_state==states.CONNECTING&&null!==source_node&&(source_node.removeClass("source_node"),source_node=null)}
function changeState(a){exitStates();$("#sidebar .button").removeClass("activebutton");$(a).addClass("activebutton");$(a).hasClass("connectionmode")&&current_state!=states.CONNECTING?(current_state=states.CONNECTING,source_node=null):$(a).hasClass("pagemode")&&current_state!=states.NEWPAGE?current_state=states.NEWPAGE:$(a).hasClass("controlmode")&&current_state!=states.NEWCONTROL?current_state=states.NEWCONTROL:($(a).hasClass("deletebutton")&&removeNode(),current_state=states.DEFAULT,$(a).removeClass("activebutton"))}
;var ui={};function updateEditPane(a){a.hasClass("control")?($("#editcontrol").show(),$("#controlname").text("control "+a.data("id")),document.getElementById("controltext").value=a.data("text")):a.hasClass("page")?($("#editpage").show(),$("#pagename").text("Page "+a.data("id")),document.getElementById("pagetext").value=a.data("text")):a.hasClass("connection")&&($("#editconnection").show(),$("#connectionname").text("Connection"),document.getElementById("connectiontext").value=a.data("text"))}
function hideEditPanes(){$("#editpage").hide();$("#editcontrol").hide();$("#editconnection").hide();$(".connectionmode").hide();$(".deletebutton").hide()}$(".textarea").on("input",function(a){a=this.value;cy.$(":selected").data("text",a)});function removeNode(){node=cy.$(":selected");!node.empty()&&confirm("Are you sure you want to delete this element and all it's links?")&&(cy.remove(node),hideEditPanes())}
function createConnection(a){current_state==states.CONNECTING&&a.isNode()&&(null==source_node?(source_node=a,source_node.addClass("source_node"),console.log("Source node assigned as node",a.data("id"))):(console.log("Creating link from ",source_node.data("id")," to ",a.data("id")),source_node.data("id")!=a.data("id")&&(cy.add({data:{source:source_node.data("id"),target:a.data("id"),text:"<Decision text to display)>"},classes:"connection",group:"edges"}),source_node.removeClass("source_node"),source_node=
null)))};var canvasEvents={};console.log("Enter canvasEvents.js");total_pages=0;
cy.on("tap",function(a){var b=a.cyTarget;current_state===states.CONNECTING&&cy.$(":selected").empty()&&(console.log("USER: please select a valid node to connect to"),source_node.select());current_state===states.NEWPAGE?b===cy&&cy.add({data:{id:++total_pages,text:"page text"},classes:"page",group:"nodes",renderedPosition:a.cyRenderedPosition}):current_state===states.NEWCONTROL&&b===cy&&cy.add({data:{id:++total_pages,text:"control node text"},classes:"control",group:"nodes",renderedPosition:a.cyRenderedPosition})});
cy.on("select",function(a){a=cy.$(":selected");$(".connectionmode").show();$(".deletebutton").show();console.log("Select: ",a.data("id"));createConnection(a);updateEditPane(a)});cy.on("tap",":selected",function(a){current_state===states.CONNECTING&&null==source_node&&(console.log("Connection node registered as currently selected node"),createConnection(cy.$(":selected")))});cy.on("unselect",function(a){cy.$(":selected").empty()&&hideEditPanes()});console.log("Enter main.js");var testgraph={};
function testConnectivity(){var a=!1,b=cy.$("node").first(),e=cy.$("node");console.log(b.data("id"));var c=cy.collection(),c=c.add(b);cy.elements().dfs({roots:b,visit:function(a,b,d){c=c.add(d);console.log("visit "+this.id()+" total "+a)},directed:!0});console.log("Total nodes:"+e.size()+" Connected_nodes: "+c.size());if(e.size()==c.size())a=!0;else{alert("Graph is not connected");var d=e.diff(c).left;console.log("Disconnected:",d.size());console.log("left: "+d.map(function(a){return a.id()}).join(", "));d.addClass("disconnected");
setTimeout(function(){d.removeClass("disconnected")},3E3)}return a};
